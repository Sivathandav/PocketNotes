{"ast":null,"code":"var _jsxFileName = \"/Users/sri/Downloads/pocket-notes-optimized/src/context/ThemeContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { storage } from '../services/storage';\nimport { STORAGE_KEYS, THEMES } from '../utils/constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeContext = /*#__PURE__*/createContext();\nexport const ThemeProvider = ({\n  children\n}) => {\n  _s();\n  const [isDark, setIsDark] = useState(() => storage.get(STORAGE_KEYS.THEME) || false);\n  useEffect(() => {\n    storage.set(STORAGE_KEYS.THEME, isDark);\n    document.body.className = isDark ? 'dark-theme' : 'light-theme';\n  }, [isDark]);\n  const toggleTheme = () => setIsDark(prev => !prev);\n  const theme = isDark ? THEMES.dark : THEMES.light;\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      isDark,\n      toggleTheme,\n      theme\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(ThemeProvider, \"bYRQtp5kshRtgql+vytllh3zkqE=\");\n_c = ThemeProvider;\nexport const useTheme = () => {\n  _s2();\n  return useContext(ThemeContext);\n};\n_s2(useTheme, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","storage","STORAGE_KEYS","THEMES","jsxDEV","_jsxDEV","ThemeContext","ThemeProvider","children","_s","isDark","setIsDark","get","THEME","set","document","body","className","toggleTheme","prev","theme","dark","light","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useTheme","_s2","$RefreshReg$"],"sources":["/Users/sri/Downloads/pocket-notes-optimized/src/context/ThemeContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { storage } from '../services/storage';\nimport { STORAGE_KEYS, THEMES } from '../utils/constants';\n\nconst ThemeContext = createContext();\n\nexport const ThemeProvider = ({ children }) => {\n  const [isDark, setIsDark] = useState(() => storage.get(STORAGE_KEYS.THEME) || false);\n\n  useEffect(() => {\n    storage.set(STORAGE_KEYS.THEME, isDark);\n    document.body.className = isDark ? 'dark-theme' : 'light-theme';\n  }, [isDark]);\n\n  const toggleTheme = () => setIsDark(prev => !prev);\n  const theme = isDark ? THEMES.dark : THEMES.light;\n\n  return (\n    <ThemeContext.Provider value={{ isDark, toggleTheme, theme }}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};\n\nexport const useTheme = () => useContext(ThemeContext);"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC7E,SAASC,OAAO,QAAQ,qBAAqB;AAC7C,SAASC,YAAY,EAAEC,MAAM,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,MAAMC,YAAY,gBAAGT,aAAa,CAAC,CAAC;AAEpC,OAAO,MAAMU,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC7C,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,MAAME,OAAO,CAACW,GAAG,CAACV,YAAY,CAACW,KAAK,CAAC,IAAI,KAAK,CAAC;EAEpFb,SAAS,CAAC,MAAM;IACdC,OAAO,CAACa,GAAG,CAACZ,YAAY,CAACW,KAAK,EAAEH,MAAM,CAAC;IACvCK,QAAQ,CAACC,IAAI,CAACC,SAAS,GAAGP,MAAM,GAAG,YAAY,GAAG,aAAa;EACjE,CAAC,EAAE,CAACA,MAAM,CAAC,CAAC;EAEZ,MAAMQ,WAAW,GAAGA,CAAA,KAAMP,SAAS,CAACQ,IAAI,IAAI,CAACA,IAAI,CAAC;EAClD,MAAMC,KAAK,GAAGV,MAAM,GAAGP,MAAM,CAACkB,IAAI,GAAGlB,MAAM,CAACmB,KAAK;EAEjD,oBACEjB,OAAA,CAACC,YAAY,CAACiB,QAAQ;IAACC,KAAK,EAAE;MAAEd,MAAM;MAAEQ,WAAW;MAAEE;IAAM,CAAE;IAAAZ,QAAA,EAC1DA;EAAQ;IAAAiB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;AAACnB,EAAA,CAhBWF,aAAa;AAAAsB,EAAA,GAAbtB,aAAa;AAkB1B,OAAO,MAAMuB,QAAQ,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMjC,UAAU,CAACQ,YAAY,CAAC;AAAA;AAACyB,GAAA,CAA1CD,QAAQ;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}